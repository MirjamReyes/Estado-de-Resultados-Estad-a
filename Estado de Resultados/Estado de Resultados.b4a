Build1=Default,b4a.example
File1=Analisis.bal
File2=analisis1.bal
File3=EstadoResultados.bal
File4=Ingresos_gastos.bal
File5=Pantalla1.bal
File6=Pantalla2.bal
File7=plantilla.xlsx
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
Group=Default Group
Library1=apoi
Library2=b4xformatter
Library3=core
Library4=dialogs
Library5=xui
Library6=mpchartlib
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'SetActivityAttribute(main, android:screenOrientation, "portrait")~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=7
NumberOfLibraries=6
NumberOfModules=1
Version=12.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
	
#End Region


#AdditionalJar: poi-3.12-android-a
#AdditionalJar: poi-ooxml-schemas-3.12-20150511-a
#MultiDex: true
Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	Dim xls As XSSFWorkbook
	Private formatter As B4XFormatter
	
	
End Sub


Sub Globals
	
	'These global variables will be redeclared each time the activity is created.
	Private INICIAR As Button
	
	Private info As Button
	Dim Usuario As String
	Dim archivo As String
	
	
	Private Nombre As EditText
	
	Usuario = Nombre 
	'Estamos guardando el texto ingresado en Nombre a la variable USUARIO
	Dim Ingresos As Button
	Dim Gadm As Float
	Dim GOp As Float
	Dim Ingresos_ As Float
	Private mbc1 As BarChart
	
	
	Private HiUsuario As Label
	
	Private Boton As Button
	
	Private Label1 As Label
	Private Label2 As Label
	Private Analisis As Button
	Private Concepto As Label
	Private Concepto1 As Label
	Private Concepto2 As Label
	Private Concepto3 As Label
	Private Concepto4 As Label
	Private Concepto5 As Label
	Private Concepto6 As Label
	Private Concepto7 As Label
	Private Datos As Label
	Private Datos1 As Label
	Private Datos2 As Label
	Private Datos3 As Label
	Private Datos4 As Label
	Private Datos5 As Label
	Private Datos6 As Label
	Private Datos7 As Label
	Private ER As Button
	Private Panel1 As Panel
	Private Panel2 As Panel
	Private Nómina As Button
	Private Regresar2 As Button
End Sub


Sub Activity_Create(FirstTime As Boolean)
		
	Activity.LoadLayout("Pantalla1")
	
	If FirstTime Then
		formatter.Initialize
		Dim DefaultFormat As B4XFormatData = formatter.GetDefaultFormat
		DefaultFormat.MaximumFractions = 2
		DefaultFormat.MinimumFractions = 2
		DefaultFormat.Prefix = "$ "
		Dim NegativeFormat As B4XFormatData = formatter.CopyFormatData(DefaultFormat)
		NegativeFormat.TextColor = xui.Color_Red
		NegativeFormat.Prefix = "$ ("
		NegativeFormat.Postfix = ")"
		NegativeFormat.FormatFont = xui.CreateDefaultBoldFont(15)
		formatter.AddFormatData(NegativeFormat, formatter.MIN_VALUE, 0, False)
	End If
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub INICIAR_Click
	Usuario = Nombre.Text
	Activity.RemoveAllViews
	Activity.LoadLayout("Pantalla2")
	Panel1.Visible=True
	HiUsuario.Text= "Hola " & Usuario

	
End Sub

Private Sub info_Click
MsgboxAsync("Recuerda verificar que el archivo elegido es el correcto", "INFORMACIÓN")

	
End Sub

Private Sub Boton_Click
	Dim fd As FileDialog
	fd.FastScroll = True
	fd.ShowOnlyFolders=False
	fd.TextColor=Colors.Black
	fd.FilePath = File.DirInternal
	Dim sf As Object = fd.ShowAsync("Seleccionar Archivo", "SELECCIONAR", "Cancelar", "", Null, False)
	Wait For (sf) Dialog_Result(Result As Int)
	If Result = DialogResponse.POSITIVE Then
		Log("File path: " & fd.FilePath)
		Log("File name: " & fd.ChosenName)
	End If
	Label1.Text = "Ruta = " & fd.FilePath
	Label2.Text = "Archivo = " & fd.ChosenName
 	archivo = fd.ChosenName
	
End Sub

Private Sub Analisis_Click
	'Panel1.Visible=False
	Activity.RemoveAllViews
	Activity.LoadLayout("Analisis")
	'Código para tomar datos de la plantilla de Excel "Plantilla"
	File.Copy(File.DirAssets,archivo,File.DirInternal,archivo)
	xls.Initialize("",File.Combine(File.DirInternal,archivo))
	Log($"ActiveSheetIndex=${xls.ActiveSheetIndex}"$)
	Dim sheet As XLSSheet = xls.getSheetAt(xls.ActiveSheetIndex)
	
	
	Dim row As XSSFRow =sheet.getRow(0)
	Dim Cell As XSSFCell =row.getCell(0)
	
	row=sheet.getRow(1)
	Cell=row.getCell(2)
	Ingresos_ = Cell.NumericCellValue
	
	row=sheet.getRow(2)
	Cell=row.getCell(2)
	Gadm = Cell.NumericCellValue
	
	row=sheet.getRow(4)
	Cell=row.getCell(2)
	GOp = Cell.NumericCellValue
	
	
End Sub

Private Sub ER_Click
	File.Copy(File.DirAssets,archivo,File.DirInternal,archivo)
	xls.Initialize("",File.Combine(File.DirInternal,archivo))
	Log($"ActiveSheetIndex=${xls.ActiveSheetIndex}"$)
	Dim sheet As XLSSheet = xls.getSheetAt(xls.ActiveSheetIndex)
	
	

	Activity.RemoveAllViews
	Activity.LoadLayout("EstadoResultados")
	Dim row As XSSFRow =sheet.getRow(0)
	Dim Cell As XSSFCell =row.getCell(0)
	
	Log("valor pelon:"&Cell.RawValue)
	Dim Texto1 As String = NumberFormat2(0, 1, 2, 2, False)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto.text= Texto1
	Log(Concepto.text)
	
	row=sheet.getRow(1)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto1.text= Texto1
	
	row=sheet.getRow(2)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto2.text= Texto1
	
	row=sheet.getRow(3)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto3.text= Texto1
	
	row=sheet.getRow(4)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto4.text= Texto1
	
	row=sheet.getRow(5)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto5.text= Texto1
	
	row=sheet.getRow(6)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto6.text= Texto1
	
	row=sheet.getRow(7)
	Cell=row.getCell(0)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Concepto7.text= Texto1
	
	row=sheet.getRow(0)
	Cell=row.getCell(2)
	Texto1 = Cell.StringCellValue
	Log(Cell.StringCellValue)
	Datos.text= Texto1
	
	row=sheet.getRow(1)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(Cell.NumericCellValue)
	Datos1.text= Texto1
	
	row=sheet.getRow(2)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos2.text= Texto1
	
	row=sheet.getRow(3)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos3.text= Texto1
	
	row=sheet.getRow(4)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos4.text= Texto1
	
	row=sheet.getRow(5)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos5.text= Texto1
	
	row=sheet.getRow(6)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos6.text= Texto1
	
	row=sheet.getRow(7)
	Cell=row.getCell(2)
	Texto1 = formatter.Format(Cell.NumericCellValue)
	Log(formatter.Format(Cell.NumericCellValue))
	Datos7.text= Texto1
End Sub

Private Sub Regresar_Click
	Activity.RemoveAllViews
	Activity.LoadLayout("Analisis")
	Panel2.Visible=True
End Sub

Private Sub Ingresos_Click
	Activity.RemoveAllViews
	Activity.LoadLayout("Ingresos_gastos")
	'SetActivityAttribute (Ingresos_gastos, android:screenOrientation, "unspecified")
	
	'    RIGHT_OF_CHART, RIGHT_OF_CHART_CENTER, RIGHT_OF_CHART_INSIDE,
	'    LEFT_OF_CHART, LEFT_OF_CHART_CENTER, LEFT_OF_CHART_INSIDE,
	'    BELOW_CHART_LEFT, BELOW_CHART_RIGHT, BELOW_CHART_CENTER,

	'   LINE, CIRCLE, SQUARE
	mbc1.LegendShapeSize = 7.0	    'this line of code needs to be before mbc1.setTheLegendPositionAndForm("BELOW_CHART_CENTER", "CIRCLE")
	mbc1.setTheLegendPositionAndForm("BELOW_CHART_CENTER", "CIRCLE")    'pass strings from the above comments
	
	mbc1.TheLegendColor = Colors.Gray
	mbc1.TheLegendTextSize = 20.0
	mbc1.LegendTitle = ""

	mbc1.ChartDescription = "INGRESOS VS GASTOS"
	mbc1.ChartDescriptionColor = 0XFFFFA500                 'ORANGE
	mbc1.ChartDescriptionTextSize = 19

	mbc1.ValueTextColor = Colors.Black
	mbc1.ValueTextSize = 10.0

	'the following 3 arrays must have the same number of entries/elements
	mbc1.BarColors = Array As Int(Colors.Blue, Colors.Yellow, Colors.Green, Colors.Red, Colors.Magenta, Colors.Cyan, Colors.Blue, Colors.Yellow, Colors.Green, Colors.Red, Colors.Magenta, Colors.Cyan)
	mbc1.LegendText = Array As String("Ingresos", "G,Operacionales", "G. Administrativos")
	mbc1.ChartData = Array As Float (Ingresos_, Gadm, GOp)    'values - it will be converted to %
	
	mbc1.DoubleTapToZoomEnabled = True
	mbc1.DrawBarShadow = False
	mbc1.GridBackgroundColor = Colors.Black
	mbc1.ValueTextColor = 0XFFFFA500
	mbc1.DrawBorders = True
	mbc1.DrawGridBackground = True
	mbc1.DrawHighlightArrow = True
	mbc1.DrawValueAboveBar = True
	mbc1.PinchZoom = True
	mbc1.ScaleEnabled = True
	mbc1.BorderColor = Colors.Blue
	mbc1.BorderWidth = 3.0
    
	mbc1.BarData = 3   'this number must be the same as the number of elements in the above arrays
	
End Sub

Private Sub Regresar2_Click
	Activity.RemoveAllViews
	Activity.LoadLayout("Analisis")
End Sub